{"version":3,"file":"QJsearch.es.js","sources":["../plugin-vue:export-helper","../packages/search/searchItem.vue","../node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js","../packages/search/index.vue","../packages/index.js"],"sourcesContent":["\nexport default (sfc, props) => {\n  const target = sfc.__vccOpts || sfc;\n  for (const [key, val] of props) {\n    target[key] = val;\n  }\n  return target;\n}\n","<template>\r\n  <div class=\"search-item-reset--wrapper\" :class=\"{ 'item-flex--wrapper': itemData?.type == 'inputNumberRange' }\">\r\n    <!-- 纯文字 -->\r\n    <el-input\r\n      type=\"text\"\r\n      :prefix-icon=\"getPrefixIcon()\"\r\n      :maxlength=\"getInputLengthLimit()\"\r\n      :style=\"formatCssText()\"\r\n      v-model=\"itemData.searchVal\"\r\n      :placeholder=\"'请输入' + (itemData?.placeholder || itemData?.labelName)\"\r\n      @change=\"handleChangeInputValue\"\r\n      @keyup.enter=\"handleKeyupEvent\"\r\n      v-if=\"itemData?.type == 'input'\"\r\n    />\r\n    <!-- 纯数字 -->\r\n    <el-input\r\n      type=\"text\"\r\n      :prefix-icon=\"getPrefixIcon()\"\r\n      :maxlength=\"getInputLengthLimit()\"\r\n      :style=\"formatCssText()\"\r\n      v-model=\"itemData.searchVal\"\r\n      :placeholder=\"'请输入' + (itemData?.placeholder || itemData?.labelName)\"\r\n      @change=\"handleChangeInputValue\"\r\n      @keyup.enter=\"handleKeyupEvent\"\r\n      v-if=\"itemData?.type == 'inputNumber'\"\r\n    />\r\n    <!-- 数字范围输入框 -->\r\n    <template v-if=\"itemData.type == 'inputNumberRange'\">\r\n      <el-input\r\n        class=\"numberInput\"\r\n        :prefix-icon=\"getPrefixIcon()\"\r\n        :maxlength=\"getInputLengthLimit()\"\r\n        :style=\"formatCssText()\"\r\n        v-model.trim=\"itemData.searchVal[0]\"\r\n        :placeholder=\"'请输入' + (itemData?.frontPlaceholder || itemData.labelName)\"\r\n        clearable\r\n        @input=\"handleChangeInputNumberRangeValue($event, 0)\"\r\n      />\r\n      <span class=\"divider\">-</span>\r\n      <el-input\r\n        class=\"numberInput\"\r\n        :prefix-icon=\"getPrefixIcon()\"\r\n        :maxlength=\"getInputLengthLimit()\"\r\n        :style=\"formatCssText()\"\r\n        v-model.trim=\"itemData.searchVal[1]\"\r\n        :placeholder=\"'请输入' + (itemData?.backPlaceholder || itemData.labelName)\"\r\n        clearable\r\n        @input=\"handleChangeInputNumberRangeValue($event, 1)\"\r\n        @clear=\"handleClearInputNumberRangeValue\"\r\n      />\r\n      <p class=\"suffix-text\" v-if=\"itemData.suffixText\">\r\n        {{ itemData.suffixText }}\r\n      </p>\r\n    </template>\r\n    <!-- 下拉单&多选框 -->\r\n    <template v-if=\"itemData.type == 'select'\">\r\n      <el-select\r\n        :style=\"formatCssText()\"\r\n        :multiple=\"itemData.multiple\"\r\n        :collapse-tags=\"itemData.multiple\"\r\n        :collapse-tags-tooltip=\"itemData.multiple\"\r\n        :placeholder=\"'请选择' + (itemData?.placeholder || itemData.labelName)\"\r\n        v-model=\"itemData.searchVal\"\r\n        clearable\r\n        @change=\"handleChangeSelectValue\"\r\n      >\r\n        <el-option v-for=\"item in itemData.options\" :key=\"item.id\" :label=\"item.name\" :value=\"String(item.id)\">\r\n        </el-option>\r\n      </el-select>\r\n      <p class=\"suffix-text\" v-if=\"itemData.suffixText\">\r\n        {{ itemData.suffixText }}\r\n      </p>\r\n    </template>\r\n    <!-- radio 类型的单选 -->\r\n    <template v-if=\"itemData.type == 'radio'\">\r\n      <el-radio-group v-model=\"itemData.searchVal\" @change=\"handleChangeRadioValue\">\r\n        <el-radio :label=\"item.id\" v-for=\"(item, index) in itemData.options\" :key=\"index\">{{ item.name }}</el-radio>\r\n      </el-radio-group>\r\n    </template>\r\n    <!-- checkbox 类型的多选 -->\r\n    <template v-if=\"itemData.type == 'checkbox'\">\r\n      <el-checkbox-group v-model=\"itemData.searchVal\" @change=\"handleChangeCheckboxValue\">\r\n        <el-checkbox :label=\"item.id\" v-for=\"item in itemData.options\" :key=\"item.id\">{{ item.name }}</el-checkbox>\r\n      </el-checkbox-group>\r\n    </template>\r\n    <template v-if=\"itemData.type == 'cascader'\">\r\n      <el-cascader\r\n        ref=\"cascader\"\r\n        v-model=\"itemData.searchVal\"\r\n        :options=\"itemData.options\"\r\n        :placeholder=\"'请选择' + (itemData?.placeholder || itemData?.labelName)\"\r\n        :props=\"{\r\n          checkStrictly: false,\r\n          value: 'id',\r\n          label: 'name',\r\n          children: 'subLit',\r\n          multiple: true,\r\n        }\"\r\n        collapse-tags\r\n        clearable\r\n        :style=\"formatCssText(itemData.elplusCssText)\"\r\n        @change=\"handleChangeCascader\"\r\n      />\r\n      <p class=\"suffix-text\" v-if=\"itemData.suffixText\">\r\n        {{ itemData.suffixText }}\r\n      </p>\r\n    </template>\r\n    <!-- 日期单独选择器 - 精确到日 -->\r\n    <template v-if=\"itemData.type == 'dateRange'\">\r\n      <el-date-picker\r\n        v-model=\"itemData.searchVal\"\r\n        type=\"daterange\"\r\n        range-separator=\"至\"\r\n        start-placeholder=\"开始时间\"\r\n        end-placeholder=\"结束时间\"\r\n        :value-format=\"itemData.formatter || 'YYYY-MM-DD'\"\r\n        :style=\"formatCssText()\"\r\n        @change=\"handleSelectQuickDate\"\r\n      >\r\n      </el-date-picker>\r\n    </template>\r\n    <!-- 日期选择器 - 精确到秒 -->\r\n    <template v-if=\"itemData.type == 'datetimeRange'\">\r\n      <el-date-picker\r\n        v-model=\"itemData.searchVal\"\r\n        type=\"datetimerange\"\r\n        range-separator=\"至\"\r\n        start-placeholder=\"开始时间\"\r\n        end-placeholder=\"结束时间\"\r\n        :value-format=\"itemData.formatter || 'YYYY-MM-DD HH:mm:ss'\"\r\n        :style=\"formatCssText(itemData.elplusCssText)\"\r\n        @change=\"handleSelectQuickDate\"\r\n        :default-time=\"defaultTime\"\r\n      >\r\n      </el-date-picker>\r\n    </template>\r\n    <!-- 快速选择器 -->\r\n    <template v-if=\"itemData.type == 'list'\">\r\n      <ul class=\"qk-list\">\r\n        <li\r\n          class=\"list-item\"\r\n          v-for=\"item in itemData.options\"\r\n          :id=\"item.id\"\r\n          :key=\"item.id\"\r\n          :class=\"{\r\n            active: getActiveNode(item.id),\r\n          }\"\r\n          @click=\"handleSelectListValue(item)\"\r\n        >\r\n          {{ item.name }}\r\n        </li>\r\n      </ul>\r\n    </template>\r\n    <!-- 快速时间 + 自由时间选择器 -->\r\n    <template v-if=\"itemData.type == 'qkdataRange' || itemData.type == 'qkdatetimeRange'\">\r\n      <ul class=\"qkdate-list\">\r\n        <li\r\n          class=\"list-item\"\r\n          v-for=\"(item, index) in itemData.options\"\r\n          :key=\"index\"\r\n          :class=\"{\r\n            active: getActiveNode(getQuickDate(item.days)) && isQuick,\r\n          }\"\r\n          @click.stop=\"handleSelectQuickDate(item.days)\"\r\n        >\r\n          {{ item.label }}\r\n        </li>\r\n        <el-date-picker\r\n          :class=\"{ active: !isQuick }\"\r\n          v-model=\"itemData.searchVal\"\r\n          :type=\"itemData.type == 'qkdate' ? 'daterange' : 'datetimerange'\"\r\n          :default-time=\"itemData.type == 'qkdate' ? new Date() : defaultTime\"\r\n          range-separator=\"至\"\r\n          start-placeholder=\"开始时间\"\r\n          end-placeholder=\"结束时间\"\r\n          :disabledDate=\"itemData.disabledDate\"\r\n          @change=\"handleSelectQuickDate\"\r\n        >\r\n        </el-date-picker>\r\n      </ul>\r\n    </template>\r\n    <!-- 按钮区 -->\r\n    <template v-if=\"itemData.type == 'btns'\">\r\n      <template v-for=\"(btn, index) in itemData.list\" :key=\"index\">\r\n        <el-button\r\n          class=\"define-btn\"\r\n          :type=\"btn.btnType || 'primary'\"\r\n          :style=\"formatCssText(btn.elplusCssText)\"\r\n          @click.stop=\"btnEvent(btn?.eventType)\"\r\n          v-if=\"btn.type == 'btn'\"\r\n          >{{ btn.text || '查询' }}</el-button\r\n        >\r\n        <div\r\n          class=\"folder-btn define-btn reset-btn\"\r\n          :style=\"formatCssText(btn.elplusCssText)\"\r\n          @click=\"handleToggleBlock\"\r\n          v-if=\"btn.type == 'folderbtn'\"\r\n        >\r\n          <span>{{ isFolder ? btn.text1 : btn.text2 }}</span>\r\n          <el-icon :class=\"[{ unfolder: !isFolder }, btn.fontName]\"><ArrowDown /></el-icon>\r\n        </div>\r\n        <span\r\n          class=\"define-btn text-btn reset-btn\"\r\n          :style=\"formatCssText(btn.elplusCssText)\"\r\n          @click.stop=\"btnEvent(btn?.eventType)\"\r\n          v-if=\"btn.type == 'textbtn'\"\r\n          >{{ btn.text }}</span\r\n        >\r\n      </template>\r\n    </template>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { reactive, ref, toRefs } from 'vue'\r\nexport default {\r\n  props: {\r\n    itemData: {\r\n      type: Object,\r\n      default: () => {\r\n        return null\r\n      },\r\n    },\r\n    index: {\r\n      type: Number,\r\n      default: 0,\r\n    },\r\n    cindex: {\r\n      type: Number,\r\n      default: -1,\r\n    },\r\n    isFolder: Boolean,\r\n  },\r\n  emits: ['searchFn', 'btnEvent'],\r\n  setup(props, { emit }) {\r\n    const state = reactive({\r\n      isQuick: false,\r\n      defaultTime: [new Date(2000, 1, 1, 0, 0, 0), new Date(2000, 2, 1, 23, 59, 59)],\r\n    })\r\n\r\n    const cascader = ref(null)\r\n\r\n    // 属性设置方法\r\n    const asMethods = {\r\n      /**\r\n       * @name 获取前置icon\r\n       */\r\n      getPrefixIcon() {\r\n        return props.itemData?.prefixIcon || ''\r\n      },\r\n      /**\r\n       * @name 格式化CSS\r\n       */\r\n      formatCssText() {\r\n        const cssText = props.itemData.elplusCssText\r\n        if (typeof cssText == 'object') {\r\n          let str = ''\r\n          Array.from(Object.keys(cssText)).forEach(key => {\r\n            str += key + ':' + cssText[key]\r\n          })\r\n          return str\r\n        }\r\n\r\n        if (typeof cssText == 'string') return cssText\r\n\r\n        return ''\r\n      },\r\n      /**\r\n       * @name input-max-length\r\n       */\r\n      getInputLengthLimit() {\r\n        return props.itemData?.maxLength || 20\r\n      },\r\n    }\r\n\r\n    // 更新 value 值得方法\r\n    const valueMethods = {\r\n      /**\r\n       * @name input输入\r\n       * @param val 选中的数据\r\n       * @param source 当前搜索栏源数据\r\n       */\r\n      handleChangeInputValue(val) {\r\n        const temp = JSON.parse(JSON.stringify(props.itemData))\r\n        if (temp.type == 'inputnumber') {\r\n          temp.searchVal = val.replace(/^0(0+)|[^\\d]+/g, '')\r\n        }\r\n\r\n        valueMethods.searchFn(temp)\r\n      },\r\n      /**\r\n       * @name\r\n       */\r\n      handleKeyupEvent() {\r\n        const temp = JSON.parse(JSON.stringify(props.itemData))\r\n        if (temp.type == 'inputnumber') {\r\n          temp.searchVal = temp.searchVal.replace(/^0(0+)|[^\\d]+/g, '')\r\n        }\r\n\r\n        valueMethods.searchFn(temp)\r\n      },\r\n      /**\r\n       * @name 修改数字区间数据\r\n       * @param { number / string } val 返回值\r\n       * @param { number } index 索引\r\n       */\r\n      handleChangeInputNumberRangeValue(val, index) {\r\n        const temp = JSON.parse(JSON.stringify(props.itemData))\r\n        temp.searchVal[index] = val.replace(/^0(0+)|[^\\d]+/g, '')\r\n        if (temp.searchVal[1] == '') return\r\n        valueMethods.searchFn(temp)\r\n      },\r\n      /**\r\n       * @name 清空inputnumberrange后面得值\r\n       */\r\n      handleClearInputNumberRangeValue() {\r\n        const temp = JSON.parse(JSON.stringify(props.itemData))\r\n        if (!temp.immediate) {\r\n          temp.searchVal = ['', '']\r\n        }\r\n\r\n        if (temp.searchVal[1] == '') return\r\n        valueMethods.searchFn(temp)\r\n      },\r\n      /**\r\n       * @name checkbox下拉选择\r\n       * @param val 选中的数据\r\n       */\r\n      handleChangeSelectValue(val) {\r\n        const temp = JSON.parse(JSON.stringify(props.itemData))\r\n        temp.searchVal = val\r\n        valueMethods.searchFn(temp)\r\n      },\r\n      /**\r\n       * @name radio 单选\r\n       * @param { string } val 选中的值\r\n       */\r\n      handleChangeRadioValue(val) {\r\n        const temp = JSON.parse(JSON.stringify(props?.itemData))\r\n        temp.searchVal = val\r\n        valueMethods.searchFn(temp)\r\n      },\r\n      /**\r\n       * @name checkbox 多选\r\n       * @param { string } val 选中的值\r\n       */\r\n      handleChangeCheckboxValue(val) {\r\n        const temp = JSON.parse(JSON.stringify(props?.itemData))\r\n        temp.searchVal = val\r\n        valueMethods.searchFn(temp)\r\n      },\r\n      /**\r\n       * @name 级联选择\r\n       */\r\n      handleChangeCascader(val) {\r\n        const temp = JSON.parse(JSON.stringify(props?.itemData))\r\n        temp.searchVal = val\r\n        valueMethods.searchFn(temp)\r\n      },\r\n      /**\r\n       * @name 日期选择\r\n       * @param { array } val 选择后得数据\r\n       */\r\n      handleSelectQuickDate(val) {\r\n        const types = ['qkdateRange', 'qkdateeRange', 'dateRange']\r\n        const temp = JSON.parse(JSON.stringify(props?.itemData))\r\n        if (typeof val == 'number') {\r\n          state.isQuick = true\r\n          const newDate = valueMethods.getQuickDate(val)\r\n          if (JSON.stringify(temp.searchVal) == JSON.stringify(newDate)) {\r\n            temp.searchVal = ['', '']\r\n          } else {\r\n            temp.searchVal = newDate\r\n          }\r\n        } else {\r\n          state.isQuick = false\r\n          // Null || Array 类型 需要用length去判断\r\n          if (val && val.length) {\r\n            const dateArr = toRefs(val)\r\n            const prev = valueMethods.formatDate(\r\n              dateArr[0].value,\r\n              types.includes(props?.itemData.type) ? 'YYYY-MM-DD' : 'YYYY-MM-DD hh:mm:ss'\r\n            )\r\n            const next = valueMethods.formatDate(\r\n              dateArr[1].value,\r\n              types.includes(props?.itemData.type) ? 'YYYY-MM-DD' : 'YYYY-MM-DD hh:mm:ss'\r\n            )\r\n            temp.searchVal = [prev, next]\r\n          }\r\n        }\r\n\r\n        valueMethods.searchFn(temp)\r\n      },\r\n      /**\r\n       * @name 获取快速选择日期时间段\r\n       * @param days 要校验的时间\r\n       */\r\n      getQuickDate(days) {\r\n        const todayStr = new Date().getTime()\r\n        const prevDay = valueMethods.formatDate(todayStr + days * 24 * 60 * 60 * 1000, 'YYYY-MM-DD') + ' 00:00:00'\r\n        const prevDayLastTime =\r\n          valueMethods.formatDate(todayStr + days * 24 * 60 * 60 * 1000, 'YYYY-MM-DD') + ' 23:59:59'\r\n        const currentDay = valueMethods.formatDate(todayStr, 'YYYY-MM-DD') + ' 23:59:59'\r\n        if (days == -1) {\r\n          return [prevDay, prevDayLastTime]\r\n        } else {\r\n          return [prevDay, currentDay]\r\n        }\r\n      },\r\n      /**\r\n       * @name list类型获取选中节点\r\n       */\r\n      getActiveNode(value) {\r\n        if (Array.isArray(value)) {\r\n          return JSON.stringify(props?.itemData.searchVal) == JSON.stringify(value)\r\n        } else {\r\n          return props?.itemData?.searchVal?.includes(String(value))\r\n        }\r\n      },\r\n      /**\r\n       * @name type是list的选择\r\n       * @param { object } item 选中数据\r\n       */\r\n      handleSelectListValue(item) {\r\n        const temp = JSON.parse(JSON.stringify(props?.itemData))\r\n        let oVal = temp?.searchVals || []\r\n        if (!temp.multiple) {\r\n          // 单选\r\n          oVal = oVal[0] == item.id ? [] : [item.id]\r\n        } else {\r\n          // 多选\r\n          if (oVal.includes(item.id)) {\r\n            oVal = oVal.filter(vk => vk != item.id)\r\n          } else {\r\n            oVal.push(...[item.id])\r\n          }\r\n        }\r\n\r\n        temp.searchVal = oVal\r\n        valueMethods.searchFn(temp)\r\n      },\r\n      handleToggleBlock() {\r\n        valueMethods.btnEvent('toggle')\r\n      },\r\n      /**\r\n       * @name 搜索事件\r\n       */\r\n      searchFn(data) {\r\n        emit('searchFn', {\r\n          index: props.index,\r\n          cindex: props.cindex,\r\n          data: data,\r\n        })\r\n      },\r\n      /**\r\n       * @name 按钮事件\r\n       * @param { string } type 事件类型\r\n       */\r\n      btnEvent(type) {\r\n        emit('btnEvent', type)\r\n      },\r\n      /**\r\n       * @name 格式化时间\r\n       * @param date 要格式化得时间\r\n       * @param format 格式类型\r\n       */\r\n      formatDate(date, format = 'YYYY-MM-DD hh:mm:ss') {\r\n        if (isNaN(new Date(date).getTime())) {\r\n          throw new Error(`${date} 不是一个有效的时间`)\r\n        }\r\n\r\n        if (!(date instanceof Date)) {\r\n          date = new Date(date)\r\n        }\r\n\r\n        const o = {\r\n          'Y+': date.getFullYear(),\r\n          'M+': date.getMonth() + 1,\r\n          'D+': date.getDate(),\r\n          'h+': date.getHours(),\r\n          'm+': date.getMinutes(),\r\n          's+': date.getSeconds(),\r\n        }\r\n\r\n        for (let k in o) {\r\n          if (new RegExp(`(${k})`).test(format)) {\r\n            format = format.replace(RegExp.$1, RegExp.$1.length === 1 ? o[k] : `0${o[k]}`.substr(-RegExp.$1.length))\r\n          }\r\n        }\r\n\r\n        return format\r\n      },\r\n    }\r\n\r\n    return {\r\n      ...toRefs(state),\r\n      ...asMethods,\r\n      ...valueMethods,\r\n      cascader,\r\n    }\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.search-item-reset--wrapper {\r\n  margin-right: 16px;\r\n\r\n  .qk-list {\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n\r\n    .list-item {\r\n      margin-left: 8px;\r\n      padding: 0 24px;\r\n      line-height: 30px;\r\n      font-size: 12px;\r\n      border: 1px solid #e2e4eb;\r\n      border-radius: 4px;\r\n\r\n      &:first-of-type {\r\n        margin-left: 0;\r\n      }\r\n\r\n      &.active {\r\n        color: #3661f0;\r\n        border-color: #3661f0;\r\n        z-index: 11;\r\n      }\r\n\r\n      &:hover {\r\n        cursor: pointer;\r\n      }\r\n    }\r\n  }\r\n\r\n  .qkdate-list {\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n\r\n    .list-item {\r\n      margin-right: 8px;\r\n      padding: 0 24px;\r\n      line-height: 30px;\r\n      font-size: 12px;\r\n      border: 1px solid #e2e4eb;\r\n      border-radius: 4px;\r\n\r\n      &:hover {\r\n        cursor: pointer;\r\n      }\r\n\r\n      &.active {\r\n        color: #3661f0;\r\n        border-color: #3661f0;\r\n        z-index: 11;\r\n      }\r\n    }\r\n  }\r\n\r\n  .define-btn {\r\n    margin-right: 16px;\r\n    line-height: 32px;\r\n  }\r\n\r\n  .folder-btn {\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    i {\r\n      margin-left: 4px;\r\n    }\r\n  }\r\n\r\n  .reset-btn {\r\n    color: #3661f0;\r\n\r\n    &:hover {\r\n      color: #5e80f3;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n}\r\n\r\n.item-flex--wrapper {\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n\r\n  .divider {\r\n    margin: 0 8px;\r\n    color: #b1b8c4;\r\n  }\r\n\r\n  .suffix-text {\r\n    padding-left: 8px;\r\n    font-size: 12px;\r\n    color: #666666;\r\n    white-space: nowrap;\r\n  }\r\n}\r\n</style>\r\n","/**\r\n * A collection of shims that provide minimal functionality of the ES6 collections.\r\n *\r\n * These implementations are not meant to be used outside of the ResizeObserver\r\n * modules as they cover only a limited range of use cases.\r\n */\r\n/* eslint-disable require-jsdoc, valid-jsdoc */\r\nvar MapShim = (function () {\r\n    if (typeof Map !== 'undefined') {\r\n        return Map;\r\n    }\r\n    /**\r\n     * Returns index in provided array that matches the specified key.\r\n     *\r\n     * @param {Array<Array>} arr\r\n     * @param {*} key\r\n     * @returns {number}\r\n     */\r\n    function getIndex(arr, key) {\r\n        var result = -1;\r\n        arr.some(function (entry, index) {\r\n            if (entry[0] === key) {\r\n                result = index;\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n        return result;\r\n    }\r\n    return /** @class */ (function () {\r\n        function class_1() {\r\n            this.__entries__ = [];\r\n        }\r\n        Object.defineProperty(class_1.prototype, \"size\", {\r\n            /**\r\n             * @returns {boolean}\r\n             */\r\n            get: function () {\r\n                return this.__entries__.length;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * @param {*} key\r\n         * @returns {*}\r\n         */\r\n        class_1.prototype.get = function (key) {\r\n            var index = getIndex(this.__entries__, key);\r\n            var entry = this.__entries__[index];\r\n            return entry && entry[1];\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @param {*} value\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.set = function (key, value) {\r\n            var index = getIndex(this.__entries__, key);\r\n            if (~index) {\r\n                this.__entries__[index][1] = value;\r\n            }\r\n            else {\r\n                this.__entries__.push([key, value]);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.delete = function (key) {\r\n            var entries = this.__entries__;\r\n            var index = getIndex(entries, key);\r\n            if (~index) {\r\n                entries.splice(index, 1);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.has = function (key) {\r\n            return !!~getIndex(this.__entries__, key);\r\n        };\r\n        /**\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.clear = function () {\r\n            this.__entries__.splice(0);\r\n        };\r\n        /**\r\n         * @param {Function} callback\r\n         * @param {*} [ctx=null]\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.forEach = function (callback, ctx) {\r\n            if (ctx === void 0) { ctx = null; }\r\n            for (var _i = 0, _a = this.__entries__; _i < _a.length; _i++) {\r\n                var entry = _a[_i];\r\n                callback.call(ctx, entry[1], entry[0]);\r\n            }\r\n        };\r\n        return class_1;\r\n    }());\r\n})();\n\n/**\r\n * Detects whether window and document objects are available in current environment.\r\n */\r\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;\n\n// Returns global object of a current environment.\r\nvar global$1 = (function () {\r\n    if (typeof global !== 'undefined' && global.Math === Math) {\r\n        return global;\r\n    }\r\n    if (typeof self !== 'undefined' && self.Math === Math) {\r\n        return self;\r\n    }\r\n    if (typeof window !== 'undefined' && window.Math === Math) {\r\n        return window;\r\n    }\r\n    // eslint-disable-next-line no-new-func\r\n    return Function('return this')();\r\n})();\n\n/**\r\n * A shim for the requestAnimationFrame which falls back to the setTimeout if\r\n * first one is not supported.\r\n *\r\n * @returns {number} Requests' identifier.\r\n */\r\nvar requestAnimationFrame$1 = (function () {\r\n    if (typeof requestAnimationFrame === 'function') {\r\n        // It's required to use a bounded function because IE sometimes throws\r\n        // an \"Invalid calling object\" error if rAF is invoked without the global\r\n        // object on the left hand side.\r\n        return requestAnimationFrame.bind(global$1);\r\n    }\r\n    return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };\r\n})();\n\n// Defines minimum timeout before adding a trailing call.\r\nvar trailingTimeout = 2;\r\n/**\r\n * Creates a wrapper function which ensures that provided callback will be\r\n * invoked only once during the specified delay period.\r\n *\r\n * @param {Function} callback - Function to be invoked after the delay period.\r\n * @param {number} delay - Delay after which to invoke callback.\r\n * @returns {Function}\r\n */\r\nfunction throttle (callback, delay) {\r\n    var leadingCall = false, trailingCall = false, lastCallTime = 0;\r\n    /**\r\n     * Invokes the original callback function and schedules new invocation if\r\n     * the \"proxy\" was called during current request.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function resolvePending() {\r\n        if (leadingCall) {\r\n            leadingCall = false;\r\n            callback();\r\n        }\r\n        if (trailingCall) {\r\n            proxy();\r\n        }\r\n    }\r\n    /**\r\n     * Callback invoked after the specified delay. It will further postpone\r\n     * invocation of the original function delegating it to the\r\n     * requestAnimationFrame.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function timeoutCallback() {\r\n        requestAnimationFrame$1(resolvePending);\r\n    }\r\n    /**\r\n     * Schedules invocation of the original function.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function proxy() {\r\n        var timeStamp = Date.now();\r\n        if (leadingCall) {\r\n            // Reject immediately following calls.\r\n            if (timeStamp - lastCallTime < trailingTimeout) {\r\n                return;\r\n            }\r\n            // Schedule new call to be in invoked when the pending one is resolved.\r\n            // This is important for \"transitions\" which never actually start\r\n            // immediately so there is a chance that we might miss one if change\r\n            // happens amids the pending invocation.\r\n            trailingCall = true;\r\n        }\r\n        else {\r\n            leadingCall = true;\r\n            trailingCall = false;\r\n            setTimeout(timeoutCallback, delay);\r\n        }\r\n        lastCallTime = timeStamp;\r\n    }\r\n    return proxy;\r\n}\n\n// Minimum delay before invoking the update of observers.\r\nvar REFRESH_DELAY = 20;\r\n// A list of substrings of CSS properties used to find transition events that\r\n// might affect dimensions of observed elements.\r\nvar transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];\r\n// Check if MutationObserver is available.\r\nvar mutationObserverSupported = typeof MutationObserver !== 'undefined';\r\n/**\r\n * Singleton controller class which handles updates of ResizeObserver instances.\r\n */\r\nvar ResizeObserverController = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserverController.\r\n     *\r\n     * @private\r\n     */\r\n    function ResizeObserverController() {\r\n        /**\r\n         * Indicates whether DOM listeners have been added.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.connected_ = false;\r\n        /**\r\n         * Tells that controller has subscribed for Mutation Events.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.mutationEventsAdded_ = false;\r\n        /**\r\n         * Keeps reference to the instance of MutationObserver.\r\n         *\r\n         * @private {MutationObserver}\r\n         */\r\n        this.mutationsObserver_ = null;\r\n        /**\r\n         * A list of connected observers.\r\n         *\r\n         * @private {Array<ResizeObserverSPI>}\r\n         */\r\n        this.observers_ = [];\r\n        this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);\r\n        this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);\r\n    }\r\n    /**\r\n     * Adds observer to observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be added.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.addObserver = function (observer) {\r\n        if (!~this.observers_.indexOf(observer)) {\r\n            this.observers_.push(observer);\r\n        }\r\n        // Add listeners if they haven't been added yet.\r\n        if (!this.connected_) {\r\n            this.connect_();\r\n        }\r\n    };\r\n    /**\r\n     * Removes observer from observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be removed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.removeObserver = function (observer) {\r\n        var observers = this.observers_;\r\n        var index = observers.indexOf(observer);\r\n        // Remove observer if it's present in registry.\r\n        if (~index) {\r\n            observers.splice(index, 1);\r\n        }\r\n        // Remove listeners if controller has no connected observers.\r\n        if (!observers.length && this.connected_) {\r\n            this.disconnect_();\r\n        }\r\n    };\r\n    /**\r\n     * Invokes the update of observers. It will continue running updates insofar\r\n     * it detects changes.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.refresh = function () {\r\n        var changesDetected = this.updateObservers_();\r\n        // Continue running updates if changes have been detected as there might\r\n        // be future ones caused by CSS transitions.\r\n        if (changesDetected) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Updates every observer from observers list and notifies them of queued\r\n     * entries.\r\n     *\r\n     * @private\r\n     * @returns {boolean} Returns \"true\" if any observer has detected changes in\r\n     *      dimensions of it's elements.\r\n     */\r\n    ResizeObserverController.prototype.updateObservers_ = function () {\r\n        // Collect observers that have active observations.\r\n        var activeObservers = this.observers_.filter(function (observer) {\r\n            return observer.gatherActive(), observer.hasActive();\r\n        });\r\n        // Deliver notifications in a separate cycle in order to avoid any\r\n        // collisions between observers, e.g. when multiple instances of\r\n        // ResizeObserver are tracking the same element and the callback of one\r\n        // of them changes content dimensions of the observed target. Sometimes\r\n        // this may result in notifications being blocked for the rest of observers.\r\n        activeObservers.forEach(function (observer) { return observer.broadcastActive(); });\r\n        return activeObservers.length > 0;\r\n    };\r\n    /**\r\n     * Initializes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.connect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already added.\r\n        if (!isBrowser || this.connected_) {\r\n            return;\r\n        }\r\n        // Subscription to the \"Transitionend\" event is used as a workaround for\r\n        // delayed transitions. This way it's possible to capture at least the\r\n        // final state of an element.\r\n        document.addEventListener('transitionend', this.onTransitionEnd_);\r\n        window.addEventListener('resize', this.refresh);\r\n        if (mutationObserverSupported) {\r\n            this.mutationsObserver_ = new MutationObserver(this.refresh);\r\n            this.mutationsObserver_.observe(document, {\r\n                attributes: true,\r\n                childList: true,\r\n                characterData: true,\r\n                subtree: true\r\n            });\r\n        }\r\n        else {\r\n            document.addEventListener('DOMSubtreeModified', this.refresh);\r\n            this.mutationEventsAdded_ = true;\r\n        }\r\n        this.connected_ = true;\r\n    };\r\n    /**\r\n     * Removes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.disconnect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already removed.\r\n        if (!isBrowser || !this.connected_) {\r\n            return;\r\n        }\r\n        document.removeEventListener('transitionend', this.onTransitionEnd_);\r\n        window.removeEventListener('resize', this.refresh);\r\n        if (this.mutationsObserver_) {\r\n            this.mutationsObserver_.disconnect();\r\n        }\r\n        if (this.mutationEventsAdded_) {\r\n            document.removeEventListener('DOMSubtreeModified', this.refresh);\r\n        }\r\n        this.mutationsObserver_ = null;\r\n        this.mutationEventsAdded_ = false;\r\n        this.connected_ = false;\r\n    };\r\n    /**\r\n     * \"Transitionend\" event handler.\r\n     *\r\n     * @private\r\n     * @param {TransitionEvent} event\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.onTransitionEnd_ = function (_a) {\r\n        var _b = _a.propertyName, propertyName = _b === void 0 ? '' : _b;\r\n        // Detect whether transition may affect dimensions of an element.\r\n        var isReflowProperty = transitionKeys.some(function (key) {\r\n            return !!~propertyName.indexOf(key);\r\n        });\r\n        if (isReflowProperty) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Returns instance of the ResizeObserverController.\r\n     *\r\n     * @returns {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.getInstance = function () {\r\n        if (!this.instance_) {\r\n            this.instance_ = new ResizeObserverController();\r\n        }\r\n        return this.instance_;\r\n    };\r\n    /**\r\n     * Holds reference to the controller's instance.\r\n     *\r\n     * @private {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.instance_ = null;\r\n    return ResizeObserverController;\r\n}());\n\n/**\r\n * Defines non-writable/enumerable properties of the provided target object.\r\n *\r\n * @param {Object} target - Object for which to define properties.\r\n * @param {Object} props - Properties to be defined.\r\n * @returns {Object} Target object.\r\n */\r\nvar defineConfigurable = (function (target, props) {\r\n    for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {\r\n        var key = _a[_i];\r\n        Object.defineProperty(target, key, {\r\n            value: props[key],\r\n            enumerable: false,\r\n            writable: false,\r\n            configurable: true\r\n        });\r\n    }\r\n    return target;\r\n});\n\n/**\r\n * Returns the global object associated with provided element.\r\n *\r\n * @param {Object} target\r\n * @returns {Object}\r\n */\r\nvar getWindowOf = (function (target) {\r\n    // Assume that the element is an instance of Node, which means that it\r\n    // has the \"ownerDocument\" property from which we can retrieve a\r\n    // corresponding global object.\r\n    var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;\r\n    // Return the local global object if it's not possible extract one from\r\n    // provided element.\r\n    return ownerGlobal || global$1;\r\n});\n\n// Placeholder of an empty content rectangle.\r\nvar emptyRect = createRectInit(0, 0, 0, 0);\r\n/**\r\n * Converts provided string to a number.\r\n *\r\n * @param {number|string} value\r\n * @returns {number}\r\n */\r\nfunction toFloat(value) {\r\n    return parseFloat(value) || 0;\r\n}\r\n/**\r\n * Extracts borders size from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @param {...string} positions - Borders positions (top, right, ...)\r\n * @returns {number}\r\n */\r\nfunction getBordersSize(styles) {\r\n    var positions = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        positions[_i - 1] = arguments[_i];\r\n    }\r\n    return positions.reduce(function (size, position) {\r\n        var value = styles['border-' + position + '-width'];\r\n        return size + toFloat(value);\r\n    }, 0);\r\n}\r\n/**\r\n * Extracts paddings sizes from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @returns {Object} Paddings box.\r\n */\r\nfunction getPaddings(styles) {\r\n    var positions = ['top', 'right', 'bottom', 'left'];\r\n    var paddings = {};\r\n    for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {\r\n        var position = positions_1[_i];\r\n        var value = styles['padding-' + position];\r\n        paddings[position] = toFloat(value);\r\n    }\r\n    return paddings;\r\n}\r\n/**\r\n * Calculates content rectangle of provided SVG element.\r\n *\r\n * @param {SVGGraphicsElement} target - Element content rectangle of which needs\r\n *      to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getSVGContentRect(target) {\r\n    var bbox = target.getBBox();\r\n    return createRectInit(0, 0, bbox.width, bbox.height);\r\n}\r\n/**\r\n * Calculates content rectangle of provided HTMLElement.\r\n *\r\n * @param {HTMLElement} target - Element for which to calculate the content rectangle.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getHTMLElementContentRect(target) {\r\n    // Client width & height properties can't be\r\n    // used exclusively as they provide rounded values.\r\n    var clientWidth = target.clientWidth, clientHeight = target.clientHeight;\r\n    // By this condition we can catch all non-replaced inline, hidden and\r\n    // detached elements. Though elements with width & height properties less\r\n    // than 0.5 will be discarded as well.\r\n    //\r\n    // Without it we would need to implement separate methods for each of\r\n    // those cases and it's not possible to perform a precise and performance\r\n    // effective test for hidden elements. E.g. even jQuery's ':visible' filter\r\n    // gives wrong results for elements with width & height less than 0.5.\r\n    if (!clientWidth && !clientHeight) {\r\n        return emptyRect;\r\n    }\r\n    var styles = getWindowOf(target).getComputedStyle(target);\r\n    var paddings = getPaddings(styles);\r\n    var horizPad = paddings.left + paddings.right;\r\n    var vertPad = paddings.top + paddings.bottom;\r\n    // Computed styles of width & height are being used because they are the\r\n    // only dimensions available to JS that contain non-rounded values. It could\r\n    // be possible to utilize the getBoundingClientRect if only it's data wasn't\r\n    // affected by CSS transformations let alone paddings, borders and scroll bars.\r\n    var width = toFloat(styles.width), height = toFloat(styles.height);\r\n    // Width & height include paddings and borders when the 'border-box' box\r\n    // model is applied (except for IE).\r\n    if (styles.boxSizing === 'border-box') {\r\n        // Following conditions are required to handle Internet Explorer which\r\n        // doesn't include paddings and borders to computed CSS dimensions.\r\n        //\r\n        // We can say that if CSS dimensions + paddings are equal to the \"client\"\r\n        // properties then it's either IE, and thus we don't need to subtract\r\n        // anything, or an element merely doesn't have paddings/borders styles.\r\n        if (Math.round(width + horizPad) !== clientWidth) {\r\n            width -= getBordersSize(styles, 'left', 'right') + horizPad;\r\n        }\r\n        if (Math.round(height + vertPad) !== clientHeight) {\r\n            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\r\n        }\r\n    }\r\n    // Following steps can't be applied to the document's root element as its\r\n    // client[Width/Height] properties represent viewport area of the window.\r\n    // Besides, it's as well not necessary as the <html> itself neither has\r\n    // rendered scroll bars nor it can be clipped.\r\n    if (!isDocumentElement(target)) {\r\n        // In some browsers (only in Firefox, actually) CSS width & height\r\n        // include scroll bars size which can be removed at this step as scroll\r\n        // bars are the only difference between rounded dimensions + paddings\r\n        // and \"client\" properties, though that is not always true in Chrome.\r\n        var vertScrollbar = Math.round(width + horizPad) - clientWidth;\r\n        var horizScrollbar = Math.round(height + vertPad) - clientHeight;\r\n        // Chrome has a rather weird rounding of \"client\" properties.\r\n        // E.g. for an element with content width of 314.2px it sometimes gives\r\n        // the client width of 315px and for the width of 314.7px it may give\r\n        // 314px. And it doesn't happen all the time. So just ignore this delta\r\n        // as a non-relevant.\r\n        if (Math.abs(vertScrollbar) !== 1) {\r\n            width -= vertScrollbar;\r\n        }\r\n        if (Math.abs(horizScrollbar) !== 1) {\r\n            height -= horizScrollbar;\r\n        }\r\n    }\r\n    return createRectInit(paddings.left, paddings.top, width, height);\r\n}\r\n/**\r\n * Checks whether provided element is an instance of the SVGGraphicsElement.\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nvar isSVGGraphicsElement = (function () {\r\n    // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement\r\n    // interface.\r\n    if (typeof SVGGraphicsElement !== 'undefined') {\r\n        return function (target) { return target instanceof getWindowOf(target).SVGGraphicsElement; };\r\n    }\r\n    // If it's so, then check that element is at least an instance of the\r\n    // SVGElement and that it has the \"getBBox\" method.\r\n    // eslint-disable-next-line no-extra-parens\r\n    return function (target) { return (target instanceof getWindowOf(target).SVGElement &&\r\n        typeof target.getBBox === 'function'); };\r\n})();\r\n/**\r\n * Checks whether provided element is a document element (<html>).\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nfunction isDocumentElement(target) {\r\n    return target === getWindowOf(target).document.documentElement;\r\n}\r\n/**\r\n * Calculates an appropriate content rectangle for provided html or svg element.\r\n *\r\n * @param {Element} target - Element content rectangle of which needs to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getContentRect(target) {\r\n    if (!isBrowser) {\r\n        return emptyRect;\r\n    }\r\n    if (isSVGGraphicsElement(target)) {\r\n        return getSVGContentRect(target);\r\n    }\r\n    return getHTMLElementContentRect(target);\r\n}\r\n/**\r\n * Creates rectangle with an interface of the DOMRectReadOnly.\r\n * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly\r\n *\r\n * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.\r\n * @returns {DOMRectReadOnly}\r\n */\r\nfunction createReadOnlyRect(_a) {\r\n    var x = _a.x, y = _a.y, width = _a.width, height = _a.height;\r\n    // If DOMRectReadOnly is available use it as a prototype for the rectangle.\r\n    var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;\r\n    var rect = Object.create(Constr.prototype);\r\n    // Rectangle's properties are not writable and non-enumerable.\r\n    defineConfigurable(rect, {\r\n        x: x, y: y, width: width, height: height,\r\n        top: y,\r\n        right: x + width,\r\n        bottom: height + y,\r\n        left: x\r\n    });\r\n    return rect;\r\n}\r\n/**\r\n * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.\r\n * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit\r\n *\r\n * @param {number} x - X coordinate.\r\n * @param {number} y - Y coordinate.\r\n * @param {number} width - Rectangle's width.\r\n * @param {number} height - Rectangle's height.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction createRectInit(x, y, width, height) {\r\n    return { x: x, y: y, width: width, height: height };\r\n}\n\n/**\r\n * Class that is responsible for computations of the content rectangle of\r\n * provided DOM element and for keeping track of it's changes.\r\n */\r\nvar ResizeObservation = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObservation.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     */\r\n    function ResizeObservation(target) {\r\n        /**\r\n         * Broadcasted width of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastWidth = 0;\r\n        /**\r\n         * Broadcasted height of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastHeight = 0;\r\n        /**\r\n         * Reference to the last observed content rectangle.\r\n         *\r\n         * @private {DOMRectInit}\r\n         */\r\n        this.contentRect_ = createRectInit(0, 0, 0, 0);\r\n        this.target = target;\r\n    }\r\n    /**\r\n     * Updates content rectangle and tells whether it's width or height properties\r\n     * have changed since the last broadcast.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObservation.prototype.isActive = function () {\r\n        var rect = getContentRect(this.target);\r\n        this.contentRect_ = rect;\r\n        return (rect.width !== this.broadcastWidth ||\r\n            rect.height !== this.broadcastHeight);\r\n    };\r\n    /**\r\n     * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\r\n     * from the corresponding properties of the last observed content rectangle.\r\n     *\r\n     * @returns {DOMRectInit} Last observed content rectangle.\r\n     */\r\n    ResizeObservation.prototype.broadcastRect = function () {\r\n        var rect = this.contentRect_;\r\n        this.broadcastWidth = rect.width;\r\n        this.broadcastHeight = rect.height;\r\n        return rect;\r\n    };\r\n    return ResizeObservation;\r\n}());\n\nvar ResizeObserverEntry = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObserverEntry.\r\n     *\r\n     * @param {Element} target - Element that is being observed.\r\n     * @param {DOMRectInit} rectInit - Data of the element's content rectangle.\r\n     */\r\n    function ResizeObserverEntry(target, rectInit) {\r\n        var contentRect = createReadOnlyRect(rectInit);\r\n        // According to the specification following properties are not writable\r\n        // and are also not enumerable in the native implementation.\r\n        //\r\n        // Property accessors are not being used as they'd require to define a\r\n        // private WeakMap storage which may cause memory leaks in browsers that\r\n        // don't support this type of collections.\r\n        defineConfigurable(this, { target: target, contentRect: contentRect });\r\n    }\r\n    return ResizeObserverEntry;\r\n}());\n\nvar ResizeObserverSPI = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback function that is invoked\r\n     *      when one of the observed elements changes it's content dimensions.\r\n     * @param {ResizeObserverController} controller - Controller instance which\r\n     *      is responsible for the updates of observer.\r\n     * @param {ResizeObserver} callbackCtx - Reference to the public\r\n     *      ResizeObserver instance which will be passed to callback function.\r\n     */\r\n    function ResizeObserverSPI(callback, controller, callbackCtx) {\r\n        /**\r\n         * Collection of resize observations that have detected changes in dimensions\r\n         * of elements.\r\n         *\r\n         * @private {Array<ResizeObservation>}\r\n         */\r\n        this.activeObservations_ = [];\r\n        /**\r\n         * Registry of the ResizeObservation instances.\r\n         *\r\n         * @private {Map<Element, ResizeObservation>}\r\n         */\r\n        this.observations_ = new MapShim();\r\n        if (typeof callback !== 'function') {\r\n            throw new TypeError('The callback provided as parameter 1 is not a function.');\r\n        }\r\n        this.callback_ = callback;\r\n        this.controller_ = controller;\r\n        this.callbackCtx_ = callbackCtx;\r\n    }\r\n    /**\r\n     * Starts observing provided element.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.observe = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is already being observed.\r\n        if (observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.set(target, new ResizeObservation(target));\r\n        this.controller_.addObserver(this);\r\n        // Force the update of observations.\r\n        this.controller_.refresh();\r\n    };\r\n    /**\r\n     * Stops observing provided element.\r\n     *\r\n     * @param {Element} target - Element to stop observing.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.unobserve = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is not being observed.\r\n        if (!observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.delete(target);\r\n        if (!observations.size) {\r\n            this.controller_.removeObserver(this);\r\n        }\r\n    };\r\n    /**\r\n     * Stops observing all elements.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.disconnect = function () {\r\n        this.clearActive();\r\n        this.observations_.clear();\r\n        this.controller_.removeObserver(this);\r\n    };\r\n    /**\r\n     * Collects observation instances the associated element of which has changed\r\n     * it's content rectangle.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.gatherActive = function () {\r\n        var _this = this;\r\n        this.clearActive();\r\n        this.observations_.forEach(function (observation) {\r\n            if (observation.isActive()) {\r\n                _this.activeObservations_.push(observation);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Invokes initial callback function with a list of ResizeObserverEntry\r\n     * instances collected from active resize observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.broadcastActive = function () {\r\n        // Do nothing if observer doesn't have active observations.\r\n        if (!this.hasActive()) {\r\n            return;\r\n        }\r\n        var ctx = this.callbackCtx_;\r\n        // Create ResizeObserverEntry instance for every active observation.\r\n        var entries = this.activeObservations_.map(function (observation) {\r\n            return new ResizeObserverEntry(observation.target, observation.broadcastRect());\r\n        });\r\n        this.callback_.call(ctx, entries, ctx);\r\n        this.clearActive();\r\n    };\r\n    /**\r\n     * Clears the collection of active observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.clearActive = function () {\r\n        this.activeObservations_.splice(0);\r\n    };\r\n    /**\r\n     * Tells whether observer has active observations.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObserverSPI.prototype.hasActive = function () {\r\n        return this.activeObservations_.length > 0;\r\n    };\r\n    return ResizeObserverSPI;\r\n}());\n\n// Registry of internal observers. If WeakMap is not available use current shim\r\n// for the Map collection as it has all required methods and because WeakMap\r\n// can't be fully polyfilled anyway.\r\nvar observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();\r\n/**\r\n * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation\r\n * exposing only those methods and properties that are defined in the spec.\r\n */\r\nvar ResizeObserver = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback that is invoked when\r\n     *      dimensions of the observed elements change.\r\n     */\r\n    function ResizeObserver(callback) {\r\n        if (!(this instanceof ResizeObserver)) {\r\n            throw new TypeError('Cannot call a class as a function.');\r\n        }\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        var controller = ResizeObserverController.getInstance();\r\n        var observer = new ResizeObserverSPI(callback, controller, this);\r\n        observers.set(this, observer);\r\n    }\r\n    return ResizeObserver;\r\n}());\r\n// Expose public methods of ResizeObserver.\r\n[\r\n    'observe',\r\n    'unobserve',\r\n    'disconnect'\r\n].forEach(function (method) {\r\n    ResizeObserver.prototype[method] = function () {\r\n        var _a;\r\n        return (_a = observers.get(this))[method].apply(_a, arguments);\r\n    };\r\n});\n\nvar index = (function () {\r\n    // Export existing implementation if available.\r\n    if (typeof global$1.ResizeObserver !== 'undefined') {\r\n        return global$1.ResizeObserver;\r\n    }\r\n    return ResizeObserver;\r\n})();\n\nexport default index;\n","<template>\r\n  <div class=\"xy-search-group--wrapper\" :style=\"formatCssText()\">\r\n    <div class=\"search-inner--container\" :style=\"{ height: wh + 'px' }\" ref=\"transitionWrapper\">\r\n      <div\r\n        class=\"search-item\"\r\n        :class=\"{ inline: item?.attr?.display == 'inline' }\"\r\n        :data-style=\"item?.attr?.display\"\r\n        v-for=\"(item, index) in copySearchData\"\r\n        :key=\"index\"\r\n        ref=\"list\"\r\n      >\r\n        <p class=\"label\" v-if=\"item?.labelVisibel || item?.labelName\">\r\n          <span v-if=\"item?.labelName\">{{ item.labelName }}</span>\r\n          <span v-if=\"item?.labelName\">：</span>\r\n        </p>\r\n        <div class=\"value\" :class=\"{ 'has-more-conditions': item.more }\">\r\n          <search-item :itemData=\"item\" :index=\"index\" :isFolder=\"isFolder\" @searchFn=\"searchFn\" @btnEvent=\"btnEvent\" />\r\n          <template v-if=\"item.more\">\r\n            <div class=\"more-seach-conditions\" v-for=\"(more, idx) in item.more\" :key=\"idx\">\r\n              <search-item\r\n                :itemData=\"more\"\r\n                :index=\"index\"\r\n                :cindex=\"idx\"\r\n                :isFolder=\"isFolder\"\r\n                @searchFn=\"searchFn\"\r\n                @btnEvent=\"btnEvent\"\r\n              />\r\n            </div>\r\n          </template>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { reactive, ref, toRefs, nextTick, watch, onMounted, onBeforeUnmount } from 'vue'\r\nimport SearchItem from './searchItem.vue'\r\nimport ResizeObserver from 'resize-observer-polyfill'\r\nexport default {\r\n  name: 'QJsearch',\r\n  props: {\r\n    searchData: {\r\n      type: [Array, Object],\r\n      default: () => {\r\n        return []\r\n      },\r\n    },\r\n    initVisibleCount: [Number, String],\r\n    wrapperStyles: {\r\n      type: [String, Object],\r\n      default: '',\r\n    },\r\n  },\r\n  components: {\r\n    SearchItem,\r\n  },\r\n  setup(props, { emit }) {\r\n    const state = reactive({\r\n      copySearchData: null,\r\n      isFolder: true,\r\n      wh: 1000,\r\n      observe: null,\r\n    })\r\n\r\n    const transitionWrapper = ref(null)\r\n    const list = ref(null)\r\n\r\n    const methods = {\r\n      /**\r\n       * @name 搜索回调\r\n       */\r\n      searchFn(result) {\r\n        if (result.cindex == -1) {\r\n          state.copySearchData[result?.index] = result.data\r\n        } else {\r\n          state.copySearchData[result?.index].more[result?.cindex] = result.data\r\n        }\r\n        emit('searchFn', state.copySearchData)\r\n      },\r\n      /**\r\n       * @name 按钮事件回调\r\n       */\r\n      btnEvent(type) {\r\n        // 收起展开事件\r\n        if (type == 'toggle') {\r\n          state.isFolder = !state.isFolder\r\n          nextTick(() => {\r\n            state.wh = methods.getTagsBlockSize()\r\n          })\r\n        }\r\n        // 搜索事件\r\n        if (type == 'search') {\r\n          emit('searchFn', state.copySearchData)\r\n        }\r\n      },\r\n      /**\r\n       * @name 格式化CSS\r\n       */\r\n      formatCssText() {\r\n        if (props?.wrapperStyles) {\r\n          const cssText = props?.wrapperStyles\r\n          if (typeof cssText == 'object') {\r\n            let str = ''\r\n            Array.from(Object.keys(cssText)).forEach(key => {\r\n              str += key + ':' + cssText[key]\r\n            })\r\n            return str\r\n          }\r\n\r\n          if (typeof cssText == 'string') return cssText\r\n        }\r\n\r\n        return ''\r\n      },\r\n      /**\r\n       * @name 获取tags部分的size\r\n       *\r\n       */\r\n      getTagsBlockSize() {\r\n        let h = 0\r\n        if (list.value) {\r\n          if (state.isFolder) {\r\n            h = getFoldSize()\r\n          } else {\r\n            h = getUnFoldSize()\r\n          }\r\n          // 20 是上边距\r\n          return h\r\n        }\r\n\r\n        function getFoldSize() {\r\n          let h = 0\r\n          let count = 0\r\n          let num = Number(props.initVisibleCount)\r\n          if (props.initVisibleCount) {\r\n            Array.from(list.value)\r\n              .filter(vn => vn.nodeType == 1)\r\n              .forEach(vk => {\r\n                if (num > 0) {\r\n                  if (vk.getAttribute('data-style') == 'inline') {\r\n                    if (count >= 1) {\r\n                      count = 0\r\n                    } else {\r\n                      count += 1\r\n                      num--\r\n                      h += Number(vk.clientHeight)\r\n                      h += parseInt(window.getComputedStyle(vk, null).marginTop)\r\n                      h += parseInt(window.getComputedStyle(vk, null).marginBottom)\r\n                    }\r\n                  } else {\r\n                    num--\r\n                    h += Number(vk.clientHeight)\r\n                    h += parseInt(window.getComputedStyle(vk, null).marginTop)\r\n                    h += parseInt(window.getComputedStyle(vk, null).marginBottom)\r\n                  }\r\n                }\r\n              })\r\n          }\r\n          return h - 1\r\n        }\r\n\r\n        function getUnFoldSize() {\r\n          let h = 0\r\n          let count = 0\r\n          const lists = Array.from(list.value)\r\n            .filter(vn => vn.nodeType == 1)\r\n            .reverse()\r\n\r\n          lists.forEach((vk, index) => {\r\n            if (vk.getAttribute('data-style') == 'inline') {\r\n              if (count >= 1) {\r\n                count = 0\r\n              } else {\r\n                count += 1\r\n                h += Number(vk.clientHeight)\r\n                h += parseInt(window.getComputedStyle(vk, null).marginTop)\r\n                if (index !== lists.length - 1) h += parseInt(window.getComputedStyle(vk, null).marginBottom)\r\n              }\r\n            } else {\r\n              h += Number(vk.clientHeight)\r\n              h += parseInt(window.getComputedStyle(vk, null).marginTop)\r\n              if (index !== lists.length - 1) h += parseInt(window.getComputedStyle(vk, null).marginBottom)\r\n            }\r\n          })\r\n          return h\r\n        }\r\n      },\r\n      seachTransBlockSizeObserve() {\r\n        state.observe = new ResizeObserver(() => {\r\n          state.wh = methods.getTagsBlockSize()\r\n        })\r\n        state.observe.observe(transitionWrapper?.value)\r\n      },\r\n    }\r\n\r\n    watch(\r\n      () => props.searchData,\r\n      val => {\r\n        if (val) {\r\n          if (Array.isArray(val)) {\r\n            state.copySearchData = props.searchData?.length ? JSON.parse(JSON.stringify(props.searchData)) : []\r\n          }\r\n          if (Object.prototype.toString.call(val) == '[object Object]') {\r\n            state.copySearchData = [JSON.parse(JSON.stringify(val))]\r\n          }\r\n        }\r\n      },\r\n      { immediate: true }\r\n    )\r\n\r\n    onMounted(() => {\r\n      transitionWrapper.value.style.transition = ''\r\n      state.wh = methods.getTagsBlockSize()\r\n      nextTick(() => {\r\n        transitionWrapper.value.style.transition = 'height 0.25s ease'\r\n        methods.seachTransBlockSizeObserve()\r\n      })\r\n    })\r\n\r\n    onBeforeUnmount(() => {\r\n      state.observe && state.observe.unobserve(transitionWrapper?.value)\r\n    })\r\n\r\n    return {\r\n      ...toRefs(state),\r\n      ...methods,\r\n      transitionWrapper,\r\n      list,\r\n    }\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.xy-search-group--wrapper {\r\n  padding-bottom: 16px;\r\n  width: 100%;\r\n  transition: all 0.35s ease;\r\n\r\n  .search-inner--container {\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    align-items: flex-start;\r\n    flex-wrap: wrap;\r\n    padding: 16px 16px 0;\r\n    overflow: hidden;\r\n\r\n    .search-item {\r\n      display: flex;\r\n      justify-content: flex-start;\r\n      align-items: flex-start;\r\n      min-width: 100%;\r\n\r\n      .label {\r\n        margin-bottom: 16px;\r\n        min-width: 100px;\r\n        font-size: 12px;\r\n        line-height: 30px;\r\n        text-align: right;\r\n      }\r\n\r\n      .value {\r\n        :deep(> div) {\r\n          margin-bottom: 16px;\r\n        }\r\n      }\r\n\r\n      .has-more-conditions {\r\n        display: flex;\r\n        justify-content: flex-start;\r\n        align-items: flex-start;\r\n        flex-wrap: wrap;\r\n\r\n        .more-seach-conditions {\r\n          margin-right: 16px;\r\n\r\n          .search-item-reset--wrapper {\r\n            margin-right: 0;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    .inline {\r\n      min-width: auto;\r\n    }\r\n  }\r\n}\r\n</style>\r\n","import 'element-plus/dist/index.css'\r\nimport './theme-chalk/index.js'\r\nimport QJsearch from './search/index.vue' //引入封装好的组件\r\nconst coms = [ QJsearch ] //将来如果有其他逐渐，都可以写在这个数据里\r\n\r\n//批量组件注册\r\nconst install = function (Vue) {\r\n  coms.forEach(com => {\r\n    Vue.component(com.name, com)\r\n  })\r\n}\r\n\r\n/* istanbul ignore if */\r\nif (typeof window !== 'undefined' && window.Vue) {\r\n  install(window.Vue);\r\n}\r\n\r\nexport default {\r\n  install, //这个方法以后在使用的时候可以被use调用\r\n  ...coms\r\n} \r\n"],"names":["_sfc_main","_hoisted_1","_createElementVNode","_createElementBlock","_normalizeClass","_createBlock","_Fragment","_createVNode","_openBlock","_hoisted_2","_toDisplayString","_renderList","_hoisted_3","_createTextVNode","_normalizeStyle","_hoisted_4","_withModifiers","index","ResizeObserver"],"mappings":"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"}